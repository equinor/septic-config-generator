name: "🛠️ Build for release"

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      artifact_base_name:
        value: ${{ jobs.build.outputs.artifact_base_name }}

permissions:
  contents: read  # actions/checkout
  actions: write  # actions/upload-artifact

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: 🛠️ Build
    runs-on: ${{ matrix.os }}    
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Install musl-tools on Linux
        if: contains(matrix.os, 'ubuntu') && contains(matrix.target, 'musl')
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools

      - name: 🧪 Test
        run: cargo nextest run --profile ci
         
      - name: 🛠️ Build
        run: cargo build --release --verbose --target ${{ matrix.target }}

      - name: "Set artifact base name"
        shell: bash
        run: |
          echo "ARTIFACT_BASE_NAME=SCG-$GITHUB_SHA" >> $GITHUB_ENV
          
          mkdir ./asset
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            mv ./target/${{ matrix.target }}/release/scg.exe ./asset/
          else
            mv ./target/${{ matrix.target }}/release/scg ./asset/
          fi

      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_BASE_NAME }}-${{ matrix.target }}
          path: ./asset/*
          retention-days: 7

    outputs:
      artifact_base_name: ${{ env.ARTIFACT_BASE_NAME }}
