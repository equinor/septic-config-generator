name: "ðŸ§ª Test code"

on:
  workflow_dispatch:
  workflow_call:
  schedule: [cron: "40 1 * * *"]

permissions:
  contents: read        # actions/checkout
  checks: write         # EnricoMi/publish-unit-test-result-action to create status checks
  pull-requests: write  # EnricoMi/publish-unit-test-result-action to comment on PRs

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: ðŸ§ª Test ${{ matrix.rust }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly, beta, stable]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: ðŸ¦€ Install Rust (${{ matrix.rust }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: ðŸ§ª Run cargo nextest
        run: cargo nextest run --profile ci

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: target/nextest/ci/junit.xml
